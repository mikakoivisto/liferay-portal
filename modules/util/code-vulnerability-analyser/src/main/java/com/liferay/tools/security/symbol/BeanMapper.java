package com.liferay.tools.security.symbol;

import org.slf4j.LoggerFactory;

import com.liferay.tools.security.symbol.resolution.strategy.PrimitiveResolutionStrategyImpl;

public class BeanMapper {

	public static String getQualifiedImplName(String qualifiedInterfaceName) {
		
		_log.debug("Mapping interface to impl: " + qualifiedInterfaceName);
		
		StringBuffer sb = new StringBuffer();
		
		String serviceBasePackage = qualifiedInterfaceName.substring(0, qualifiedInterfaceName.lastIndexOf('.')); 
		
		if (serviceBasePackage.equals("com.liferay.portal.kernel.settings")) {
		
			_log.debug("Kernel interface");
			
			sb.append("com.liferay.portal.settings");
			sb.append(qualifiedInterfaceName.substring(qualifiedInterfaceName.lastIndexOf('.')));
			sb.append("Impl");						
			
		} else if (qualifiedInterfaceName.equals("com.liferay.portal.service.PersistedModelLocalServiceRegistry")) {
		
			_log.debug("Service registry interface");
			
			sb.append(serviceBasePackage);
			sb.append(qualifiedInterfaceName.substring(qualifiedInterfaceName.lastIndexOf('.')));
			sb.append("Impl");

		} else if (qualifiedInterfaceName.equals("com.liferay.portal.kernel.backgroundtask.BackgroundTaskStatusRegistry")) {
		
			_log.debug("BackgroundTaskStatusRegistry interface");
			sb.append("com.liferay.portal.backgroundtask.BackgroundTaskStatusRegistryImpl");
			
		} else if (qualifiedInterfaceName.equals("com.liferay.portal.kernel.backgroundtask.BackgroundTaskThreadLocalManager")) {
			
			_log.debug("BackgroundTaskThreadLocalManager interface");					
			sb.append("com.liferay.portal.kernel.backgroundtask.BackgroundTaskThreadLocalManager");
			
		} else if (qualifiedInterfaceName.equals("com.liferay.portal.service.impl.LayoutLocalServiceHelper")) {
			
			_log.debug("LayoutLocalServiceHelper interface");					
			sb.append("com.liferay.portal.service.impl.LayoutLocalServiceHelper");
			
		} else if (qualifiedInterfaceName.equals("com.liferay.portal.kernel.repository.RepositoryProvider")) {
			
			_log.debug("RepositoryProvider interface");					
			sb.append("com.liferay.portal.repository.RepositoryProviderImpl");
			
		} else if (qualifiedInterfaceName.equals("com.liferay.portal.repository.registry.RepositoryClassDefinitionCatalog")) {
			
			_log.debug("RepositoryClassDefinitionCatalog interface");					
			sb.append("com.liferay.portal.repository.registry.RepositoryClassDefinitionCatalogImpl");

		} else if (qualifiedInterfaceName.equals("com.liferay.portal.kernel.comment.CommentManager")) {
			
			_log.debug("CommentManager interface");					
			sb.append("com.liferay.portal.comment.CommentManagerImpl");
			
		} else if (qualifiedInterfaceName.equals("com.liferay.portal.kernel.repository.RepositoryFactory")) {
			
			_log.debug("RepositoryFactory interface");					
			sb.append("com.liferay.portal.repository.RepositoryFactoryImpl");

		} else {
			
			_log.debug("Module interface");
			
			sb.append(serviceBasePackage);
			sb.append(".impl");
			sb.append(qualifiedInterfaceName.substring(qualifiedInterfaceName.lastIndexOf('.')));
			sb.append("Impl");
		}
		
		return sb.toString();
	}
	
	private final static org.slf4j.Logger _log = LoggerFactory.getLogger(BeanMapper.class);
}