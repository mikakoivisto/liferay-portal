package com.liferay.tools.security.symbol;

import com.github.javaparser.ast.Node;
import com.github.javaparser.ast.body.ClassOrInterfaceDeclaration;
import com.liferay.tools.security.utils.StaticAnalysisUtils;

public class UnresolvableSymbolException extends Exception {
	
	private static final long serialVersionUID = 1L;

	private SymbolTable _symbolTable;
	private String _symbol;
	
	public UnresolvableSymbolException(String symbol) {
		this(symbol, null);
	}
	
	public UnresolvableSymbolException(String symbol, SymbolTable symbolTable) {
		_symbol = symbol;
		_symbolTable = symbolTable;
	}
	
	public void setSymbolTable(SymbolTable symbolTable) {
		_symbolTable = symbolTable;
	}
	
	public SymbolTable getSymbolTable() {
		return _symbolTable;
	}
	
	@Override
	public String getMessage() {

		if (_symbolTable != null) {
		
			Node node = _symbolTable.getNode();
			ClassOrInterfaceDeclaration def;
			if (node instanceof ClassOrInterfaceDeclaration) {
				def = (ClassOrInterfaceDeclaration)node;
			} else
				def = StaticAnalysisUtils.getClassDeclaration(node);
			
			return "Failed to resolve symbol \"" + _symbol + "\"" + (def != null ? " in " + def.getName() : "") + "\n" + node.toString();
		} else
			return "Failed to resolve symbol \"" + _symbol + "\"";
	}
}